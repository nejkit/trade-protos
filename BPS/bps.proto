syntax = "proto3";

package BPS;

import "bps_errors.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option go_package = "/bps";

service BalanceGrpcService {
    rpc AddNewCurrency(AddNewCurrencyRequest) returns (google.protobuf.Empty);
    rpc GetCurrencies(google.protobuf.Empty) returns (GetCurrenciesResponse);
    rpc GetTransfers(GetTransfersRequest) returns (GetTransfersResponse);
}

message AddNewCurrencyRequest {
  string currency_name = 1;
  string currency_code = 2;
}

message GetCurrenciesResponse {
  repeated CurrencyInfo info = 1;
}

message CurrencyInfo {
  string currency_code = 1;
  string currency_name = 2;
}

message GetTransfersRequest {
  string account_id = 1;
  google.protobuf.StringValue asset_id = 2;
  google.protobuf.Timestamp from = 3;
  google.protobuf.Timestamp to = 4;
}

message GetTransfersResponse {
  repeated TransferInfo info = 1;
}

message TransferInfo {
  string transfer_id = 1;
  string from = 2;
  string to = 3;
  string currency_code = 4;
  bool is_outgoing = 5;
}

message EmmitBalanceInfo {
  string currency_name = 1;
  double amount = 2;
}

message BalanceInfo {
  string currency_name = 1;
  double amount = 2;
  double locked_amount = 3;
}

message BpsEmmitAssetRequest {
  string id = 1;
  string asset_id = 2;
  repeated EmmitBalanceInfo emit_balances_info = 3;
}

message BpsEmmitAssetResponse {
  string id = 1;
  string asset_id = 2;
  string account_id = 3;
  string currency_code = 4;
  double amount = 5;
  BpsError error = 6;
}

message BpsCreateAssetRequest {
  string id = 1;
  repeated EmmitBalanceInfo emmit_info = 2;
  string account_id = 3;
}

message BpsCreateAssetResponse {
  string id = 1;
  string asset_id = 2;
  BpsError error = 3;
}

message BbsGetAssetInfoRequest {
  string id = 1;
  string asset_id = 2;
  string account_id = 3;
}

message BpsGetAssetInfoResponse {
  string id = 1;
  string asset_id = 2;
  string account_id = 3;
  google.protobuf.Timestamp created_date = 4;
  repeated BalanceInfo balances_info = 5;
  BpsError error = 6;
}

message BpsDeactivateAssetRequest {
  string id = 1;
  string asset_id = 2;
  string account_id = 3;
}

message BpsDeactivateAssetResponse {
  string id = 1;
  BpsError error = 2;
}

message BpsAddCurrencyRequest {
  string id = 1;
  string currency_name = 2;
  string currency_code = 3;
}

message BpsAddCurrencyResponse {
  string id = 1;
  BpsError error = 2;
}

message BpsLockBalanceRequest {
  string id = 1;
  string asset_id = 2;
  string account_id = 3;
  string currency_code = 4;
  double amount = 5;
}

message BpsLockBalanceResponse {
  string id = 1;
  string balance_id = 2;
  BpsError error = 3;
}

message BpsRefundBalanceRequest {
  string id = 1;
  string balance_id = 2;
  double amount = 3;
}

message BpsRefundBalanceResponse {
  string id = 1;
  BpsError error = 2;
}

message BpsTransferData {
  string from = 1;
  string to = 2;
  double amount = 3;
}

enum BpsTransferState {
  BPS_TRANSFER_STATE_NEW = 0;
  BPS_TRANSFER_STATE_IN_PROCESS = 1;
  BPS_TRANSFER_STATE_CHARGED = 2;
  BPS_TRANSFER_STATE_DONE = 3;
  BPS_TRANSFER_STATE_REJECTED = 4;
  BPS_TRANSFER_STATE_ERROR = 5;
}

message BpsMatchingTransferRequest {
  string id = 1;
  repeated BpsTransferData transfer_data = 2;
}

message BpsTransfer {
  string id = 1;
  repeated BpsTransferData transfer_data = 2;
  BpsTransferState transfer_state = 3;
  BpsError error = 4;
  int64 created_at = 5;
  int64 updated_at = 6;
}

message BpsOutboxTransferRequest {
  string id = 1;
  string from = 2;
  string external_address = 3;
  double amount = 4;
  string currency_code = 5;
}
